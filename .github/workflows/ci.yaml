name: ci pipeline
on:
  workflow_dispatch:
    
permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t url-image:latest .

      - name: Configure AWS Credentials for OIDC
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::902839103466:role/openid-role
    
      #Terraform Setup
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: 1.10.4
    
      - name: Terraform Init
        run: terraform init
        working-directory: infrastructure
      - name: Terraform Format and Validate
        run: |
          terraform fmt -check
          terraform validate
        working-directory: infrastructure
      - name: Terraform Plan
        working-directory: infrastructure
        run: |
          terraform plan -out=tfplan -input=false
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: infrastructure

  Push_to_ECR:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.0.0
        env:
          AWS_REGION: us-east-1
      - name: Push Docker image to ECR
        run: |
          docker tag url-image:latest 902839103466.dkr.ecr.us-east-1.amazonaws.com/url-image:latest
          docker push 902839103466.dkr.ecr.us-east-1.amazonaws.com/url-image:latest

  Deploy_to_ECS:
    runs-on: ubuntu-latest
    needs: [Push_to_ECR]
    steps:
      - name: Configure AWS Credentials for OIDC
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::902839103466:role/openid-role

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster url-repo-cluster --service url-repo-service --force-new-deployment
      
         
      